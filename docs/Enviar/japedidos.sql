-- MySQL Script generated by MySQL Workbench
-- Tue Oct 22 21:30:57 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`usuario` ;

CREATE TABLE IF NOT EXISTS `mydb`.`usuario` (
  `id` INT NOT NULL,
  `nome` VARCHAR(48) NOT NULL,
  `login` VARCHAR(20) NOT NULL,
  `senha` VARCHAR(32) NOT NULL,
  `tipo` ENUM("administrador", "atendente") NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`est_andamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`est_andamento` ;

CREATE TABLE IF NOT EXISTS `mydb`.`est_andamento` (
  `id` INT NOT NULL,
  `nome` VARCHAR(16) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `nome_UNIQUE` (`nome` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`cliente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`cliente` ;

CREATE TABLE IF NOT EXISTS `mydb`.`cliente` (
  `id` INT NOT NULL,
  `nome` VARCHAR(80) NOT NULL,
  `telefone` VARCHAR(20) NOT NULL,
  `id_usuario_alt` INT NULL COMMENT 'Necessário para controle de alterações, conforme [RNF 06] Controle de alteração de dados',
  `dthr_alt` DATETIME NULL COMMENT 'Necessário para controle de alterações, conforme [RNF 06] Controle de alteração de dados',
  PRIMARY KEY (`id`),
  INDEX `fk_cliente_1_idx` (`id_usuario_alt` ASC) VISIBLE,
  CONSTRAINT `fk_cliente_1`
    FOREIGN KEY (`id_usuario_alt`)
    REFERENCES `mydb`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`pedido` ;

CREATE TABLE IF NOT EXISTS `mydb`.`pedido` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_cliente` INT NOT NULL,
  `id_usuario_autor` INT NOT NULL,
  `dthr_criacao` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `id_usuario_alt` INT NULL COMMENT 'Necessário para controle de alterações, conforme [RNF 06] Controle de alteração de dados\nAo haver alteração em qualquer informação do pedido, deverá haver o registro do autor da alteração e do horário. Alterações no estado do pedido serão registrados independentemente\n',
  `dthr_alt` DATETIME NULL COMMENT 'Necessário para controle de alterações, conforme [RNF 06] Controle de alteração de dados\nAo haver alteração em qualquer informação do pedido, deverá haver o registro do autor da alteração e do horário. Alterações no estado do pedido serão registrados independentemente\n',
  `tipo_entrega` ENUM("envio", "retirada") NOT NULL,
  `dthr_entregar` DATETIME NOT NULL,
  `preco_frete` DECIMAL(8,2) NOT NULL DEFAULT 0.00,
  `tx_desconto` INT NOT NULL DEFAULT 0.00,
  `preco_final` DECIMAL(10,2) NOT NULL,
  `dt_venc_pagamento` DATE NULL,
  `dt_pago` DATE NULL,
  `preco_custo_total` DECIMAL(8,2) NOT NULL,
  PRIMARY KEY (`id`, `id_cliente`),
  UNIQUE INDEX `id_pedido_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_pedido_1_idx` (`id_cliente` ASC) VISIBLE,
  CONSTRAINT `fk_pedido_1`
    FOREIGN KEY (`id_cliente`)
    REFERENCES `mydb`.`cliente` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`destino`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`destino` ;

CREATE TABLE IF NOT EXISTS `mydb`.`destino` (
  `id_pedido` INT NOT NULL,
  `logradouro` VARCHAR(45) NOT NULL,
  `numero` VARCHAR(20) NOT NULL,
  `bairro` VARCHAR(45) NOT NULL,
  `cidade` VARCHAR(45) NOT NULL,
  `estado` VARCHAR(45) NOT NULL,
  `pais` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_pedido`),
  CONSTRAINT `fk_destino_1`
    FOREIGN KEY (`id_pedido`)
    REFERENCES `mydb`.`pedido` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`est_andamento_pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`est_andamento_pedido` ;

CREATE TABLE IF NOT EXISTS `mydb`.`est_andamento_pedido` (
  `id_est_andamento` INT NOT NULL,
  `id_pedido` INT NOT NULL,
  `id_usuario_autor` INT NOT NULL COMMENT 'Usuário responsável pela atribuição do estado ao pedido',
  `dthr_criacao` DATETIME NOT NULL COMMENT 'Necessário para controle de alterações, conforme [RNF 06] Controle de alteração de dados',
  PRIMARY KEY (`id_est_andamento`, `id_pedido`),
  INDEX `fk_est_andamento_pedido_1_idx` (`id_pedido` ASC) VISIBLE,
  CONSTRAINT `fk_est_andamento_pedido_1`
    FOREIGN KEY (`id_pedido`)
    REFERENCES `mydb`.`pedido` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_est_andamento_pedido_2`
    FOREIGN KEY (`id_est_andamento`)
    REFERENCES `mydb`.`est_andamento` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`destinatario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`destinatario` ;

CREATE TABLE IF NOT EXISTS `mydb`.`destinatario` (
  `id_pedido` INT NOT NULL,
  `info` VARCHAR(120) NOT NULL,
  PRIMARY KEY (`id_pedido`),
  CONSTRAINT `fk_destinatario_1`
    FOREIGN KEY (`id_pedido`)
    REFERENCES `mydb`.`pedido` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`info_pj`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`info_pj` ;

CREATE TABLE IF NOT EXISTS `mydb`.`info_pj` (
  `id_pedido` INT NOT NULL,
  `cnpj` VARCHAR(20) NOT NULL,
  `nome_fantasia` VARCHAR(60) NOT NULL,
  `nome_empresarial` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`id_pedido`),
  CONSTRAINT `fk_info_pj_1`
    FOREIGN KEY (`id_pedido`)
    REFERENCES `mydb`.`pedido` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`info_pf`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`info_pf` ;

CREATE TABLE IF NOT EXISTS `mydb`.`info_pf` (
  `id_pedido` INT NOT NULL,
  `nome_cliente` VARCHAR(45) NOT NULL,
  `cpf` VARCHAR(11) NOT NULL,
  PRIMARY KEY (`id_pedido`),
  CONSTRAINT `fk_id_pedido`
    FOREIGN KEY (`id_pedido`)
    REFERENCES `mydb`.`pedido` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`categoria`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`categoria` ;

CREATE TABLE IF NOT EXISTS `mydb`.`categoria` (
  `id` INT NOT NULL,
  `nome` VARCHAR(24) NOT NULL,
  `descricao` VARCHAR(120) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`unidade`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`unidade` ;

CREATE TABLE IF NOT EXISTS `mydb`.`unidade` (
  `id` INT NOT NULL,
  `nome` VARCHAR(16) NOT NULL,
  `abreviacao` CHAR(5) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_unidade_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`produto` ;

CREATE TABLE IF NOT EXISTS `mydb`.`produto` (
  `id` INT NOT NULL,
  `id_categoria` INT NOT NULL,
  `id_unidade` INT NOT NULL,
  `nome` VARCHAR(32) NOT NULL,
  `preco_venda` DECIMAL(8,2) NOT NULL DEFAULT 0,
  `preco_custo` DECIMAL(8,2) NOT NULL DEFAULT 0,
  `id_usuario_alt` INT NULL,
  `dthr_alt` DATETIME NULL,
  `estado` BIT(1) NOT NULL DEFAULT b'1',
  PRIMARY KEY (`id`, `id_unidade`, `id_categoria`),
  INDEX `fk_produto_1_idx` (`id_categoria` ASC) VISIBLE,
  INDEX `fk_produto_2_idx` (`id_unidade` ASC) VISIBLE,
  INDEX `fk_produto_3_idx` (`id_usuario_alt` ASC) VISIBLE,
  CONSTRAINT `fk_produto_1`
    FOREIGN KEY (`id_categoria`)
    REFERENCES `mydb`.`categoria` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produto_2`
    FOREIGN KEY (`id_unidade`)
    REFERENCES `mydb`.`unidade` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produto_3`
    FOREIGN KEY (`id_usuario_alt`)
    REFERENCES `mydb`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`produto_pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`produto_pedido` ;

CREATE TABLE IF NOT EXISTS `mydb`.`produto_pedido` (
  `id_produto` INT NOT NULL,
  `id_pedido` INT NOT NULL,
  `quantidade` INT NOT NULL,
  `preco_venda` DECIMAL(8,2) NOT NULL,
  `preco_custo` DECIMAL(8,2) NOT NULL,
  `info_adicional` VARCHAR(45) NULL,
  PRIMARY KEY (`id_produto`, `id_pedido`),
  INDEX `fk_produto_pedido_2_idx` (`id_pedido` ASC) VISIBLE,
  CONSTRAINT `fk_produto_pedido_2`
    FOREIGN KEY (`id_pedido`)
    REFERENCES `mydb`.`pedido` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produto_pedido_3`
    FOREIGN KEY (`id_produto`)
    REFERENCES `mydb`.`produto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`info_pagamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`info_pagamento` ;

CREATE TABLE IF NOT EXISTS `mydb`.`info_pagamento` (
  `id_pedido` INT NOT NULL,
  `dt_vencimento` DATE NULL,
  `dt_pago` DATE NULL,
  PRIMARY KEY (`id_pedido`),
  CONSTRAINT `fk_info_pagamento_1`
    FOREIGN KEY (`id_pedido`)
    REFERENCES `mydb`.`pedido` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`intercorrencia`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`intercorrencia` ;

CREATE TABLE IF NOT EXISTS `mydb`.`intercorrencia` (
  `id_intercorrencia` INT NOT NULL,
  `id_pedido` INT NOT NULL,
  `descricao` VARCHAR(200) NOT NULL,
  `dthr_criacao` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `id_usuario_autor` INT NOT NULL,
  PRIMARY KEY (`id_intercorrencia`, `id_pedido`, `id_usuario_autor`),
  INDEX `fk_intercorrencia_2_idx` (`id_usuario_autor` ASC) VISIBLE,
  CONSTRAINT `fk_intercorrencia_1`
    FOREIGN KEY (`id_pedido`)
    REFERENCES `mydb`.`pedido` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_intercorrencia_2`
    FOREIGN KEY (`id_usuario_autor`)
    REFERENCES `mydb`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`info_cancelamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`info_cancelamento` ;

CREATE TABLE IF NOT EXISTS `mydb`.`info_cancelamento` (
  `id_pedido` INT NOT NULL,
  `justificativa` VARCHAR(120) NOT NULL,
  PRIMARY KEY (`id_pedido`),
  CONSTRAINT `fk_info_cancelamento_1`
    FOREIGN KEY (`id_pedido`)
    REFERENCES `mydb`.`pedido` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
