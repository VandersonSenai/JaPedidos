/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package japedidos.pedidos;

import com.github.lgooddatepicker.components.DatePicker;
import com.github.lgooddatepicker.components.DatePickerSettings;
import japedidos.AccessController;
import japedidos.bd.BD;
import japedidos.pedidos.Estado;
import japedidos.pedidos.Pedido;
import japedidos.usuario.Usuario;
import java.awt.event.ItemEvent;
import javax.swing.JFrame;
import java.time.LocalDate;
import java.time.LocalDateTime;
import javax.swing.JOptionPane;

/**
 *
 * @author thiago
 */
public class JPanel_AtualizarEstado extends javax.swing.JPanel {
    private Pedido pedido;
    private boolean pedidoFoiPago;
    private boolean pedidoTemDataVencimento;
    private Estado atual;
    private Usuario alterador;
    private Runnable updateAction;
    private EstadoPedido[] estadosExistentes;
    /**
     * Creates new form JPanel_AtualizarEstado
     */
    
//    public static void main(String[] args) {
//        JFrame frame = new JFrame("Teste de alteração de pedido");
//        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//        Pedido[] p = BD.Pedido.selectByEstado(Estado.ABERTO);
//        frame.add(new JPanel_AtualizarEstado(p[0], p[0].getEstadoAtualPedido().ESTADO, Usuario.getAtual()));
//        frame.pack();
//        frame.setVisible(true);
//    }
    
    public JPanel_AtualizarEstado(Pedido p, Estado atual, Usuario alterador, Runnable updateAction) {
        if (BD.isAccessible()) {
            AccessController.verificarLogin();
        } else {
            System.exit(0);
        }
        this.pedido = p;
        this.pedidoFoiPago = pedido.getDataPago() != null;
        this.pedidoTemDataVencimento = pedido.getDataVencimentoPagamento() != null;
        this.estadosExistentes = (p.getEstadosPedido().length > 1) ? p.getEstadosPedido() : BD.EstadoPedido.selectAllByPedido(p);
        this.atual = atual;
        this.alterador = alterador;
        this.updateAction = updateAction;
        initComponents();
        gerenciarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnl_mudanca_estado = new javax.swing.JPanel();
        jcmb_novo_estado = new javax.swing.JComboBox<>();
        if (!atual.equals(Estado.CONCLUIDO) && !atual.equals(Estado.CANCELADO)) {
            for (Estado e : Estado.getAll()) {
                boolean adicionar = true;
                if (pedidoFoiPago && e.equals(Estado.AGUARDANDO_PAGAMENTO) || pedidoTemDataVencimento && e.equals(Estado.AGUARDANDO_PAGAMENTO) || ((atual.equals(Estado.SAIU_PARA_ENTREGA) || atual.equals(Estado.AGUARDANDO_RETIRADA)) && ( e.equals(Estado.AGUARDANDO_ENVIO) || e.equals(Estado.AGUARDANDO_RETIRADA) || e.equals(Estado.EM_PREPARO)))) {
                    adicionar = false;
                } else {
                    for (EstadoPedido ep : estadosExistentes) {
                        if (e.equals(ep.ESTADO)) {
                            adicionar = false;
                            break;
                        }
                    }
                }
                if (adicionar) {
                    jcmb_novo_estado.addItem(e);
                }
            }
        }
        jTextField1 = new javax.swing.JTextField(atual.NOME);
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jpnl_info_estado = new javax.swing.JPanel();
        jtbp_info_estado = new javax.swing.JTabbedPane();
        jpnl_pagamentoPendente = new javax.swing.JPanel();
        jlbl_data_vencimento = new javax.swing.JLabel();
        DatePickerSettings dateSettings = new DatePickerSettings();
        //dateSettings.setFormatForDatesCommonEra("d MMM yyyy");
        //dateSettings.setFormatForDatesBeforeCommonEra("d MMM uuuu");
        dateSettings.setAllowEmptyDates(false);
        dateSettings.setEnableYearMenu(false);
        dateSettings.setVisiblePreviousYearButton(false);
        dateSettings.setVisibleNextYearButton(false);
        dateSettings.setVisibleTodayButton(true);
        dtp_vencimento_pagamento = new com.github.lgooddatepicker.components.DatePicker(dateSettings);
        jchb_data_vencimento = new javax.swing.JCheckBox();
        jpnl_pago = new javax.swing.JPanel();
        jlbl_data_pago = new javax.swing.JLabel();
        DatePickerSettings dateSettings2 = new DatePickerSettings();
        //dateSettings2.setFormatForDatesCommonEra("d MMM yyyy");
        //dateSettings2.setFormatForDatesBeforeCommonEra("d MMM uuuu");

        dateSettings2.setEnableYearMenu(false);
        dateSettings2.setVisiblePreviousYearButton(false);
        dateSettings2.setVisibleNextYearButton(false);
        dateSettings2.setVisibleTodayButton(true);
        dtp_pago = new com.github.lgooddatepicker.components.DatePicker(dateSettings2);
        jchb_foi_pago = new javax.swing.JCheckBox();
        jpnl_cancelamento = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtxta_justificativa = new javax.swing.JTextArea();
        jlbl_justificativa = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jbtn_alterar = new javax.swing.JButton();
        jbtn_cancelar = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jcmb_novo_estado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcmb_novo_estadoItemStateChanged(evt);
            }
        });

        jTextField1.setEnabled(false);
        jTextField1.setDisabledTextColor(new java.awt.Color(102, 102, 102));

        jLabel1.setText("Estado atual:");

        jLabel2.setText("Novo estado:");

        javax.swing.GroupLayout jpnl_mudanca_estadoLayout = new javax.swing.GroupLayout(jpnl_mudanca_estado);
        jpnl_mudanca_estado.setLayout(jpnl_mudanca_estadoLayout);
        jpnl_mudanca_estadoLayout.setHorizontalGroup(
            jpnl_mudanca_estadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnl_mudanca_estadoLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jpnl_mudanca_estadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jpnl_mudanca_estadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcmb_novo_estado, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jpnl_mudanca_estadoLayout.setVerticalGroup(
            jpnl_mudanca_estadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnl_mudanca_estadoLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jpnl_mudanca_estadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addGroup(jpnl_mudanca_estadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcmb_novo_estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        add(jpnl_mudanca_estado, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 410, -1));

        jpnl_info_estado.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informações do estado", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 0, 14))); // NOI18N
        jpnl_info_estado.setMaximumSize(new java.awt.Dimension(395, 210));
        jpnl_info_estado.setMinimumSize(new java.awt.Dimension(395, 210));
        jpnl_info_estado.setPreferredSize(new java.awt.Dimension(395, 210));
        jpnl_info_estado.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtbp_info_estado.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jtbp_info_estadoComponentShown(evt);
            }
        });

        jpnl_pagamentoPendente.setMaximumSize(new java.awt.Dimension(195, 39));
        jpnl_pagamentoPendente.setPreferredSize(new java.awt.Dimension(195, 39));
        jpnl_pagamentoPendente.setEnabled(false);
        jpnl_pagamentoPendente.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jpnl_pagamentoPendenteComponentShown(evt);
            }
        });
        jpnl_pagamentoPendente.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlbl_data_vencimento.setText("Data do vencimento:");
        jlbl_data_vencimento.setIconTextGap(0);
        jlbl_data_vencimento.setMaximumSize(new java.awt.Dimension(140, 17));
        jlbl_data_vencimento.setMinimumSize(new java.awt.Dimension(140, 17));
        jlbl_data_vencimento.setPreferredSize(new java.awt.Dimension(140, 17));
        jpnl_pagamentoPendente.add(jlbl_data_vencimento, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 140, -1));

        //datePicker1.getComponentDateTextField().setPreferredSize(new java.awt.Dimension(80, 20));
        if (pedidoTemDataVencimento) {
            dtp_vencimento_pagamento.setDate(pedido.getDataVencimentoPagamento());
        } else {
            dateSettings.setAllowEmptyDates(true);
            dateSettings.setDateRangeLimits(LocalDate.now().plusDays(1), LocalDate.now().plusYears(1));
            dtp_vencimento_pagamento.setDate(null);
        }

        javax.swing.JButton datePickerButton = dtp_vencimento_pagamento.getComponentToggleCalendarButton();
        datePickerButton.setPreferredSize(new java.awt.Dimension(22, 22));
        datePickerButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        datePickerButton.setBorder(null);
        datePickerButton.setText("");

        javax.swing.ImageIcon dateExampleIcon = new javax.swing.ImageIcon(getClass().getResource("/datepickerbutton1.png"));
        java.awt.Dimension newDateButtonSize = new java.awt.Dimension(dateExampleIcon.getIconWidth() + 4, dateExampleIcon.getIconHeight() + 4);
        datePickerButton.setIcon(dateExampleIcon);
        datePickerButton.setPreferredSize(newDateButtonSize);
        datePickerButton.setOpaque(false);
        datePickerButton.setContentAreaFilled(false);
        datePickerButton.setBorderPainted(false);
        datePickerButton.setFocusPainted(false);
        jpnl_pagamentoPendente.add(dtp_vencimento_pagamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, -1, -1));

        jchb_data_vencimento.setText("Definir data de vencimento");
        jchb_data_vencimento.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jchb_data_vencimentoItemStateChanged(evt);
            }
        });
        jpnl_pagamentoPendente.add(jchb_data_vencimento, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 200, -1));

        jtbp_info_estado.addTab("Pagamento pendente", jpnl_pagamentoPendente);

        jpnl_pago.setMaximumSize(new java.awt.Dimension(195, 39));
        jpnl_pago.setPreferredSize(new java.awt.Dimension(195, 39));
        jpnl_pago.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jpnl_pagoComponentShown(evt);
            }
        });
        jpnl_pago.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlbl_data_pago.setText("Data do pagamento:");
        jlbl_data_pago.setIconTextGap(0);
        jlbl_data_pago.setMaximumSize(new java.awt.Dimension(140, 17));
        jlbl_data_pago.setMinimumSize(new java.awt.Dimension(140, 17));
        jlbl_data_pago.setPreferredSize(new java.awt.Dimension(140, 17));
        jpnl_pago.add(jlbl_data_pago, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 140, -1));

        //datePicker2.getComponentDateTextField().setPreferredSize(new java.awt.Dimension(80, 20));
        if (pedidoFoiPago) {
            dtp_pago.setDate(pedido.getDataPago());
        }

        dateSettings2.setDateRangeLimits(pedido.getRegistroCriacao().DATA_HORA.toLocalDate(), LocalDate.now());
        javax.swing.JButton datePickerButton2 = dtp_pago.getComponentToggleCalendarButton();
        datePickerButton2.setPreferredSize(new java.awt.Dimension(22, 22));
        datePickerButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        datePickerButton2.setBorder(null);
        datePickerButton2.setText("");

        datePickerButton2.setIcon(dateExampleIcon);
        datePickerButton2.setPreferredSize(newDateButtonSize);
        datePickerButton2.setOpaque(false);
        datePickerButton2.setContentAreaFilled(false);
        datePickerButton2.setBorderPainted(false);
        datePickerButton2.setFocusPainted(false);
        jpnl_pago.add(dtp_pago, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, -1, -1));

        jchb_foi_pago.setText("Foi pago");
        jchb_foi_pago.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jchb_foi_pagoItemStateChanged(evt);
            }
        });
        jpnl_pago.add(jchb_foi_pago, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 200, -1));

        jtbp_info_estado.addTab("Pago", jpnl_pago);

        jpnl_cancelamento.setMinimumSize(new java.awt.Dimension(100, 100));
        jpnl_cancelamento.setPreferredSize(new java.awt.Dimension(100, 100));
        jpnl_cancelamento.setRequestFocusEnabled(false);
        jpnl_cancelamento.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jpnl_cancelamentoComponentShown(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jtxta_justificativa.setColumns(20);
        jtxta_justificativa.setLineWrap(true);
        jtxta_justificativa.setRows(5);
        jScrollPane1.setViewportView(jtxta_justificativa);

        jlbl_justificativa.setText("Justificativa");
        jlbl_justificativa.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout jpnl_cancelamentoLayout = new javax.swing.GroupLayout(jpnl_cancelamento);
        jpnl_cancelamento.setLayout(jpnl_cancelamentoLayout);
        jpnl_cancelamentoLayout.setHorizontalGroup(
            jpnl_cancelamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnl_cancelamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnl_cancelamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnl_cancelamentoLayout.createSequentialGroup()
                        .addComponent(jlbl_justificativa, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(262, 262, 262))
                    .addGroup(jpnl_cancelamentoLayout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );
        jpnl_cancelamentoLayout.setVerticalGroup(
            jpnl_cancelamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnl_cancelamentoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlbl_justificativa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        jtbp_info_estado.addTab("Cancelamento", jpnl_cancelamento);

        jpnl_info_estado.add(jtbp_info_estado, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 350, 150));

        add(jpnl_info_estado, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 390, 190));

        jbtn_alterar.setText("Alterar");
        jbtn_alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_alterarActionPerformed(evt);
            }
        });

        jbtn_cancelar.setText("Cancelar");
        jbtn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(jbtn_alterar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jbtn_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtn_alterar)
                    .addComponent(jbtn_cancelar)))
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 400, 50));
    }// </editor-fold>//GEN-END:initComponents

    private void jbtn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_cancelarActionPerformed
        ((java.awt.Window)this.getTopLevelAncestor()).dispose();
    }//GEN-LAST:event_jbtn_cancelarActionPerformed

    private void jbtn_alterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_alterarActionPerformed
        Estado novoEstado = (Estado)jcmb_novo_estado.getSelectedItem();
        EstadoPedido novoEstadoPedido = new EstadoPedido(novoEstado, alterador, LocalDateTime.now());
        
        if (novoEstado.equals(Estado.CANCELADO) && jpnl_cancelamento.isEnabled()) {
            String info = jtxta_justificativa.getText().trim();
            if (!info.isEmpty()) {
                novoEstadoPedido.setInfoCancelamento(info);
            }
        } else if (novoEstado.equals(Estado.AGUARDANDO_PAGAMENTO) && jchb_data_vencimento.isSelected() && jpnl_pagamentoPendente.isEnabled()) {
            novoEstadoPedido.setDataVencimentoPagamento(dtp_vencimento_pagamento.getDate());
        } else if (!pedidoFoiPago) { // Qualquer outro estado e o pedido não foi pago
            if (jchb_foi_pago.isSelected()) {
                novoEstadoPedido.setDataPago(dtp_pago.getDate());
            } else if (novoEstado.equals(Estado.CONCLUIDO)) {
                novoEstadoPedido.setDataPago(LocalDate.now()); // Pega data atual se pedido foi concluido sem data de pagamento
            }
        }
        
        if (BD.Pedido.atualizarEstado(pedido, novoEstadoPedido) > 0) {
            JOptionPane.showMessageDialog(null, "Estado atualizado com sucesso!", "Alteração de estado", JOptionPane.INFORMATION_MESSAGE);
            javax.swing.JFrame frame = ((javax.swing.JFrame)this.getTopLevelAncestor());
            frame.setVisible(false);
            this.updateAction.run();
            frame.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Não foi possível atualizar o estado do pedido.", "Alteração de estado", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbtn_alterarActionPerformed

    private void jtbp_info_estadoComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jtbp_info_estadoComponentShown
        
    }//GEN-LAST:event_jtbp_info_estadoComponentShown

    private void jpnl_pagamentoPendenteComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jpnl_pagamentoPendenteComponentShown

    }//GEN-LAST:event_jpnl_pagamentoPendenteComponentShown

    private void jpnl_cancelamentoComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jpnl_cancelamentoComponentShown

    }//GEN-LAST:event_jpnl_cancelamentoComponentShown

    private void jcmb_novo_estadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcmb_novo_estadoItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            gerenciarCampos();
        }
    }//GEN-LAST:event_jcmb_novo_estadoItemStateChanged

    private void jchb_data_vencimentoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jchb_data_vencimentoItemStateChanged
        boolean ativarData = jpnl_pagamentoPendente.isEnabled() && jchb_data_vencimento.isSelected();
        jlbl_data_vencimento.setEnabled(ativarData);
        dtp_vencimento_pagamento.setEnabled(ativarData);
        if (ativarData) {
            dtp_vencimento_pagamento.setDate(LocalDate.now().plusWeeks(1));
            dtp_vencimento_pagamento.getSettings().setAllowEmptyDates(false);
        } else {
            dtp_vencimento_pagamento.getSettings().setAllowEmptyDates(true);
            dtp_vencimento_pagamento.setDate(pedido.getDataVencimentoPagamento());
        }
    }//GEN-LAST:event_jchb_data_vencimentoItemStateChanged

    private void jchb_foi_pagoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jchb_foi_pagoItemStateChanged

        // Pago
        boolean ativarDataPago = jpnl_pago.isEnabled() && jchb_foi_pago.isSelected();
        jlbl_data_pago.setEnabled(ativarDataPago);
        dtp_pago.setEnabled(ativarDataPago);
        if (ativarDataPago) {
            dtp_pago.getSettings().setAllowEmptyDates(false);
            dtp_pago.setDate(LocalDate.now());
        } else {
            dtp_pago.getSettings().setAllowEmptyDates(true);
            dtp_pago.setDate(pedido.getDataPago());
        }
    }//GEN-LAST:event_jchb_foi_pagoItemStateChanged

    private void jpnl_pagoComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jpnl_pagoComponentShown
        
    }//GEN-LAST:event_jpnl_pagoComponentShown

    private void gerenciarCampos() {
        dtp_pago.getSettings().setAllowEmptyDates(true);
        Estado selecionado = (Estado)jcmb_novo_estado.getSelectedItem();
        jchb_data_vencimento.setEnabled(false);
        jchb_data_vencimento.setSelected(pedidoTemDataVencimento);
        jpnl_pago.setEnabled(false);
        jpnl_cancelamento.setEnabled(false);
        jpnl_pagamentoPendente.setEnabled(false);
        jtxta_justificativa.setText(null);
        jchb_foi_pago.setEnabled(!pedidoFoiPago);
        jchb_foi_pago.setSelected(pedidoFoiPago);
        dtp_pago.setDate(pedido.getDataPago());
        
        if (selecionado.equals(Estado.AGUARDANDO_PAGAMENTO)) {
            jpnl_pagamentoPendente.setEnabled(!pedidoTemDataVencimento && !pedidoFoiPago);
            jchb_data_vencimento.setEnabled(!pedidoTemDataVencimento && !pedidoFoiPago);
            jtbp_info_estado.setSelectedIndex(0);
            jpnl_pago.setEnabled(false);
            jchb_foi_pago.setEnabled(false);
        } else {
            jpnl_pago.setEnabled(!pedidoFoiPago);
            if (selecionado.equals(Estado.CANCELADO)) {
                jpnl_cancelamento.setEnabled(true);
                jtbp_info_estado.setSelectedIndex(2);
            } else if (selecionado.equals(Estado.PAGO)) {
                dtp_pago.getSettings().setAllowEmptyDates(false);
                jchb_foi_pago.setEnabled(false);
                jchb_foi_pago.setSelected(true);
                jtbp_info_estado.setSelectedIndex(1);
                
            } else if (!selecionado.equals(Estado.ABERTO)) {
                if (!pedidoFoiPago && selecionado.equals(Estado.CONCLUIDO)) { // Qualquer outro estado e o pedido não foi pago
                    dtp_pago.getSettings().setAllowEmptyDates(false);
                    jchb_foi_pago.setEnabled(false);
                    jchb_foi_pago.setSelected(true);
                    dtp_pago.setDate(LocalDate.now());
                } else {
                    jpnl_pago.setEnabled(!pedidoFoiPago);
                }


                jtbp_info_estado.setSelectedIndex(1);
            }
        }
        if (!selecionado.equals(Estado.CONCLUIDO) && !selecionado.equals(Estado.PAGO)) {
            jchb_foi_pago.setSelected(pedidoFoiPago);
        }
        
        boolean ativarDataPago = jpnl_pago.isEnabled() && jchb_foi_pago.isSelected();
        jlbl_data_pago.setEnabled(ativarDataPago);
        dtp_pago.setEnabled(ativarDataPago);
        if (ativarDataPago) {
            dtp_pago.getSettings().setAllowEmptyDates(false);
            dtp_pago.setDate(LocalDate.now());
        }
        
        boolean ativarData = jpnl_pagamentoPendente.isEnabled() && jchb_data_vencimento.isSelected();
        jlbl_data_vencimento.setEnabled(ativarData);
        dtp_vencimento_pagamento.setEnabled(ativarData);
        if (ativarData) {
            dtp_vencimento_pagamento.setDate(LocalDate.now().plusWeeks(1));
            dtp_vencimento_pagamento.getSettings().setAllowEmptyDates(false);
        }
        
        // Cancelamento
        jlbl_justificativa.setEnabled(jpnl_cancelamento.isEnabled());
        jtxta_justificativa.setEnabled(jpnl_cancelamento.isEnabled());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.github.lgooddatepicker.components.DatePicker dtp_pago;
    private com.github.lgooddatepicker.components.DatePicker dtp_vencimento_pagamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton jbtn_alterar;
    private javax.swing.JButton jbtn_cancelar;
    private javax.swing.JCheckBox jchb_data_vencimento;
    private javax.swing.JCheckBox jchb_foi_pago;
    private javax.swing.JComboBox<japedidos.pedidos.Estado> jcmb_novo_estado;
    private javax.swing.JLabel jlbl_data_pago;
    private javax.swing.JLabel jlbl_data_vencimento;
    private javax.swing.JLabel jlbl_justificativa;
    private javax.swing.JPanel jpnl_cancelamento;
    private javax.swing.JPanel jpnl_info_estado;
    private javax.swing.JPanel jpnl_mudanca_estado;
    private javax.swing.JPanel jpnl_pagamentoPendente;
    private javax.swing.JPanel jpnl_pago;
    private javax.swing.JTabbedPane jtbp_info_estado;
    private javax.swing.JTextArea jtxta_justificativa;
    // End of variables declaration//GEN-END:variables
}
